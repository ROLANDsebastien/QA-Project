apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
      - name: mongodb
        image: mongo:latest
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_DATABASE
          value: compta_db
        - name: MONGO_INITDB_ROOT_USERNAME
          value: admin
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: password
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: database
spec:
  selector:
    app: database
  ports:
  - port: 27017
    targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: fm-compta-backend:latest  # Assuming built image
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          value: production
        - name: PORT
          value: "3001"
        - name: MONGODB_URI
          value: mongodb://admin:password@database:27017/compta_db?authSource=admin
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: backend
  ports:
  - port: 3001
    targetPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: fm-compta-frontend:latest
        ports:
        - containerPort: 3000
        env:
        - name: NEXT_PUBLIC_API_URL
          value: http://backend:3001/api
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
  - port: 3000
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: dashboard
          mountPath: /usr/share/nginx/html
      volumes:
      - name: dashboard
        configMap:
          name: qa-dashboard
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: qa-dashboard
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head><title>QA Dashboard</title></head>
    <body><h1>QA Dashboard</h1><p>Placeholder</p></body>
    </html>
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
      - name: sonarqube
        image: sonarqube:community
        ports:
        - containerPort: 9000
        env:
        - name: SONAR_ES_BOOTSTRAP_CHECKS_DISABLE
          value: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube
spec:
  selector:
    app: sonarqube
  ports:
  - port: 9000
    targetPort: 9000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: selenium
spec:
  replicas: 1
  selector:
    matchLabels:
      app: selenium
  template:
    metadata:
      labels:
        app: selenium
    spec:
      containers:
      - name: selenium
        image: selenium/standalone-chrome
        ports:
        - containerPort: 4444
---
apiVersion: v1
kind: Service
metadata:
  name: selenium
spec:
  selector:
    app: selenium
  ports:
  - port: 4444
    targetPort: 4444
---
apiVersion: batch/v1
kind: Job
metadata:
  name: k6-test
spec:
  template:
    spec:
      containers:
      - name: k6
        image: grafana/k6
        command: ["k6", "run", "/qa/k6_script.js"]
        volumeMounts:
        - name: qa-scripts
          mountPath: /qa
      volumes:
      - name: qa-scripts
        configMap:
          name: qa-scripts
      restartPolicy: Never
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: qa-scripts
data:
  k6_script.js: |
    import http from 'k6/http';
    export default function () { http.get('http://backend:3001'); }
